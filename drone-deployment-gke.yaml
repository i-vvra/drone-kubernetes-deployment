apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  creationTimestamp: 2018-10-06T21:23:34Z
  generation: 4
  labels:
    app: drone
    chart: drone-1.7.0
    component: server
    heritage: Tiller
    release: mydrone
  name: mydrone-drone-server
  namespace: drone
  resourceVersion: "43002"
  selfLink: /apis/extensions/v1beta1/namespaces/drone/deployments/mydrone-drone-server
  uid: 14e1672a-c9ae-11e8-aced-42010a80021f
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drone
      component: server
      release: mydrone
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/secrets: af18ffbf2a782ed56c19acf49da88d7cc57d72de2a73100ada95c88ae5395952
      creationTimestamp: null
      labels:
        app: drone
        component: server
        release: mydrone
    spec:
      containers:
      - env:
        - name: DRONE_SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: mydrone-drone
        - name: DRONE_HOST
          value: http://35.188.29.217
        - name: DRONE_ADMIN
          value: me
        - name: DRONE_DATABASE_DATASOURCE
          value: /var/lib/drone/drone.sqlite
        - name: DRONE_DATABASE_DRIVER
          value: sqlite3
        - name: DRONE_DEBUG
          value: "false"
        - name: DRONE_GITHUB
          value: "true"
        - name: DRONE_GITHUB_CLIENT
          value: 6c17382e0cab1f1ca02d
        - name: DRONE_GITHUB_SECRET
          value: 4818a154c9c424d41118aa79ab0100956a2eee1e
        - name: DRONE_OPEN
          value: "true"
        - name: DRONE_PROVIDER
          value: github
        image: docker.io/drone/drone:0.8.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mydrone-drone-server
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 9000
          name: grpc
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/drone
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: mydrone-drone
      serviceAccountName: mydrone-drone
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mydrone-drone
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2018-10-06T21:23:34Z
    lastUpdateTime: 2018-10-06T21:23:34Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 4
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1

